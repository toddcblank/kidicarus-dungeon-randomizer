extends layout

block content
  - var formLocation = "generate-seed"
  script(src="javascripts/util.js")

 
    
    
  p 
    if(hasRom || spoilersOnly)
      
      if(spoilersOnly)
        - formLocation = "generate-maps-only"
      div.form
        form(action=formLocation, method="post")
          div.form-group.seed
            label.form-element(for="seed") Seed (Leave 0 for new seed)  
            input.form-element(type="text", name="seed", value="0")
            label.form-element(for="difficulty") Difficulty
            select.form-element(name="difficulty")
              option(value="1") EASY
              option(value="2" selected) NORMAL
              option(value="3") HARD
            label.form-element(for="skipSpoilers") Race Mode (No spoilers, no passwords, cannot choose seed)
            input.form-element(type="checkbox", name="skipSpoilers")
          div.form-group.seed  
            label.form-element(for="doors") Randomize all doors &amp; remove upgrade room requirements
            input.form-element(type="radio", name="doors", value="1", checked=true) 
            label.form-element(for="doors") Put Upgrades at end of 1-2, 2-1, 2-2, and 3-1, keep requirements
            input.form-element(type="radio", name="doors", value="2")

          div.form-group.seed
            label.form-element(for="useFbsLogic") Use fruitbatsalad's fortress logic (more linear)      
            input.form-element(type="radio", name="useFbsLogic",  value="1", checked)
            label.form-element(for="useFbsLogic") Use Rumbleminze's fortress logic (more mazey, bigger)  
            input.form-element(type="radio", name="useFbsLogic", value="2")
          div.form-group.seed
            label.form-element(for="useNewRooms") Use new custom rooms      
            input.form-element(type="radio", name="useNewRooms",  value="1", checked)
            label.form-element(for="useNewRooms") Don't use new custom rooms  
            input.form-element(type="radio", name="useNewRooms", value="2")
          div.form-group.submit
            input(type="submit", value="randomize!")


        //-     div.dungeon-settings
        //-       label(for="fortress1MinSize") Minimum Size 
        //-       input#fortress1MinSize.form-control(type="range", name="fortress1MinSize" value="20" min="10" max="64" oninput="fortress1MinSizeDisplay.value = value")
        //-       input#fortress1MinSizeDisplay.form-control.display(type="number", value="20", disabled)
        //-       label(for="fortress1MaxSize") Maximum Size
        //-       input#fortress1MaxSize.form-control(type="range", name="fortress1MaxSize"  value="35" min="10" max="64" oninput="fortress1MaxSizeDisplay.value = value")
        //-       input#fortress1MaxSizeDisplay.form-control.display(type="number", value="35", disabled)
        //-       label(for="fortress1WallChance") Chance for Wall
        //-       input#fortress1WallChance.form-control(type="range", name="fortress1WallChance"  value="60" min="0" max="100" oninput="fortress1WallChanceDisplay.value = value")
        //-       input#fortress1WallChanceDisplay.form-control.display(type="number", value="60", disabled)
        //-       label(for="fortress1MaxUnvisitable") Allowed # unvisitable
        //-       input#fortress1MaxUnvisitable.form-control(type="range", name="fortress1MaxUnvisitable"  value="0" min="0" max="10" oninput="fortress1MaxUnvisitableDisplay.value = value")
        //-       input#fortress1MaxUnvisitableDisplay.form-control.display(type="number", value="0", disabled)
        //-       label(for="fortress1Shops") Number of Shops
        //-       input#fortress1Shops.form-control(type="range", name="fortress1Shops"  value="1" list="roomCountOptions" min="0" max="5" oninput="fortress1ShopsDisplay.value = value")
        //-       input#fortress1ShopsDisplay.form-control.display(type="number", value="1", disabled)
        //-       label(for="fortress1Hospitals") Number of Hospitals
        //-       input#fortress1Hospitals.form-control(type="range", name="fortress1Hospitals"  value="1" list="roomCountOptions" min="0" max="5" oninput="fortress1HospitalsDisplay.value = value")
        //-       input#fortress1HospitalsDisplay.form-control.display(type="number", value="1", disabled)
        //-       label(for="fortress1Spas") Number of Spas
        //-       input#fortress1Spas.form-control(type="range", name="fortress1Spas"  value="1" list="roomCountOptions" min="0" max="5" oninput="fortress1SpasDisplay.value = value")
        //-       input#fortress1SpasDisplay.form-control.display(type="number", value="1", disabled)
        //-       label(for="fortress1MinimumDistanceToBoss") Minimum Path Length
        //-       input#fortress1MinimumDistanceToBoss.form-control(type="range" name="fortress1MinimumDistanceToBoss"  value="5" min="0" max="30" oninput="fortress1MinimumDistanceToBossDisplay.value = value")
        //-       input#fortress1MinimumDistanceToBossDisplay.form-control.display(type="number", value="5", disabled)

      
        //-     div.dungeon-settings
        //-       label(for="fortress2MinSize") Minimum Size 
        //-       input#fortress2MinSize.form-control(type="range", name="fortress2MinSize" min="10" max="54")
        //-       label(for="fortress2MaxSize") Maximum Size
        //-       input#fortress2MaxSize.form-control(type="range", name="fortress2MaxSize" min="20" max="64")
        //-       label(for="fortress2WallChance") Chance for Wall
        //-       input#fortress2WallChance.form-control(type="range", name="fortress2WallChance"  min="0" max="100")
        //-       label(for="fortress2MaxUnvisitable") Allowed # unvisitable
        //-       input#fortress2MaxUnvisitable.form-control(type="range", name="fortress2MaxUnvisitable" list="roomCountOptions" min="0" max="5")
        //-       label(for="fortress2Shops") Number of Shops
        //-       input#fortress2MaxUnvisitable.form-control(type="range", name="fortress2Shops" list="roomCountOptions" min="0" max="5")
        //-       label(for="fortress2Hospitals") Number of Hospitals
        //-       input#fortress2Hospitals.form-control(type="range", name="fortress2Hospitals" list="roomCountOptions" min="0" max="5")
        //-       label(for="fortress2Spas") Number of Spas
        //-       input#fortress2Spas.form-control(type="range", name="fortress2Spas" list="roomCountOptions" min="0" max="5")
        //-       label(for="fortress2MinimumDistanceToBoss") Minimum Path Length
        //-       input#fortress2MinimumDistanceToBoss.form-control(type="range", name="fortress2MinimumDistanceToBoss"  value="7")
            


        //-     div.dungeon-settings
        //-       label(for="fortress3MinSize") Minimum Size 
        //-       input#fortress3MinSize.form-control(type="range", name="fortress3MinSize" min="10" max="54")
        //-       label(for="fortress3MaxSize") Maximum Size
        //-       input#fortress3MaxSize.form-control(type="range", name="fortress3MaxSize"  min="10" max="64")
        //-       label(for="fortress3WallChance") Chance for Wall
        //-       input#fortress3WallChance.form-control(type="range", name="fortress3WallChance")
        //-       label(for="fortress3MaxUnvisitable") Allowed # unvisitable
        //-       input#fortress3MaxUnvisitable.form-control(type="range", name="fortress3MaxUnvisitable")
        //-       label(for="fortress3Shops") Number of Shops
        //-       input#fortress3MaxUnvisitable.form-control(type="range", name="fortress3Shops")
        //-       label(for="fortress3Hospitals") Number of Hospitals
        //-       input#fortress3Hospitals.form-control(type="range", name="fortress3Hospitals")
        //-       label(for="fortress3Spas") Number of Spas
        //-       input#fortress3Spas.form-control(type="range", name="fortress3Spas")
        //-       label(for="fortress3MinimumDistanceToBoss") Minimum Path Length
        //-       input#fortress3MinimumDistanceToBoss.form-control(type="range", name="fortress3MinimumDistanceToBoss"  value="10")

          datalist(id="dungeonSizes")
            option(value="5" label="5")
          
          datalist(id="roomCountOptions")
            option(value="0" label="0")
            option(value="1")
            option(value="2")
            option(value="3" label="3")
            option(value="4")
            option(value="5" label="5")
    else
      .form
        form(action="./upload-rom-for-patch" method="POST" encType="multipart/form-data")
          div.form-group.submit          
            h3.form-element Please provide a vanilla, unheadered Kid Icarus ROM to patch:
            input.form-element(type='file' name='rom') 
            input.form-element(type='submit' name='submit' value='upload') 
      p 
        a(href="/generate-maps-only") Or click here if you just want to generate spoiler images without an actual NES file
