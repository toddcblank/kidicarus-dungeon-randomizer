//roomId - id in Kid Icaraus, also cooresponds to image of room
//paths - array for paths FROM TBRL of room to TBRL of room.  i.e. [F, F, F, F] would be a 4 way room that you can go any direction
//        [0x7, 0x7, 0x7, 0x7] would mean all entrences can go TBR but none can go L
//clipPaths - same as paths, but for if the person can do the wall clips
//validEntrances:  TBRL hex value of where you can enter the room from.  i.e. the vertical rooms would be 1 + 2 + 0 + 0 = 3

rooms = [
    {
        roomId: '0',
        paths:	[0x0, 0x0, 0x0, 0x0],
        clipPaths: [0x0, 0x0, 0x0, 0x0],
        validEntrances:	0x0
    },
    {
        roomId: '1',
        paths:	[0x7, 0x7, 0x7, 0x0],
        clipPaths: [0x7, 0x7, 0x7, 0x0],
        validEntrances:	0x7
    },
    {
        roomId: '2',
        paths:	[0xe, 0xe, 0xe, 0xe],
        clipPaths: [0xe, 0xe, 0xe, 0xe],
        validEntrances:	0xF
    },
    {
        roomId: '3',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '4',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '5',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '6',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '7',
        paths:	[0x0, 0xe, 0xe, 0xe],
        clipPaths: [0x0, 0xe, 0xe, 0xe],
        validEntrances:	0xE
    },
    {
        roomId: '8',
        paths:	[0xe, 0x6, 0x6, 0xe],
        clipPaths: [0xe, 0x6, 0x6, 0xe],
        validEntrances:	0xF
    },
    {
        roomId: '9',
        paths:	[0xf, 0x6, 0x6, 0xe],
        clipPaths: [0xf, 0x6, 0x6, 0xe],
        validEntrances:	0xF
    },    
    {
        roomId: 'A',
        paths:	[0xd, 0x6, 0x4, 0xd],
        clipPaths: [0xf, 0x8, 0x6, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: 'B',
        paths:	[0x0, 0x0, 0xc, 0xc],
        clipPaths: [0x0, 0x0, 0xc, 0xc],
        validEntrances:	0xD
    },
    {
        roomId: 'C',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: 'D',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: 'E',
        paths:	[0x5, 0xa, 0x5, 0xa],
        clipPaths: [0xf, 0xa, 0xf, 0xa],
        validEntrances:	0xF
    },
    {
        roomId: 'F',
        paths:	[0x7, 0x7, 0x7, 0x0],
        clipPaths: [0x7, 0x7, 0x7, 0x0],
        validEntrances:	0x7
    },
    {
        roomId: '10',
        paths:	[0x0, 0x0, 0x0, 0x0],
        clipPaths: [0x0, 0x0, 0x0, 0x0],
        validEntrances:	0x0
    },
    {
        roomId: '11',
        paths:	[0x7, 0x7, 0x7, 0x0],
        clipPaths: [0x7, 0x7, 0x7, 0x0],
        validEntrances:	0x7
    },
    {
        roomId: '12',
        paths:	[0xd, 0x0, 0xd, 0xd],
        clipPaths: [0xd, 0x0, 0xd, 0xd],
        validEntrances:	0xD
    },
    {
        roomId: '13',
        paths:	[0xf, 0xe, 0xe, 0xe],
        clipPaths: [0xf, 0xe, 0xe, 0xe],
        validEntrances:	0xF
    },
    {
        roomId: '14',
        paths:	[0xd, 0x0, 0xd, 0xd],
        clipPaths: [0xd, 0x0, 0xd, 0xd],
        validEntrances:	0xD
    },
    {
        roomId: '15',
        paths:	[0xe, 0xe, 0xe, 0xe],
        clipPaths: [0xe, 0xe, 0xe, 0xe],
        validEntrances:	0xF
    },
    {
        roomId: '16',
        paths:	[0xe, 0xe, 0xe, 0xe],
        clipPaths: [0xe, 0xe, 0xe, 0xe],
        validEntrances:	0xF
    },
    {
        roomId: '17',
        paths:	[0xe, 0xe, 0xe, 0xe],
        clipPaths: [0xe, 0xe, 0xe, 0xe],
        validEntrances:	0xF
    },
    {
        roomId: '18',
        paths:	[0xe, 0xe, 0xe, 0xe],
        clipPaths: [0xe, 0xe, 0xe, 0xe],
        validEntrances:	0xF
    },
    {
        roomId: '19',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '1A',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '1B',
        paths:	[0x8, 0x2, 0x7, 0x8],
        clipPaths: [0x8, 0x2, 0x7, 0x8],
        validEntrances:	0xF
    },
    {
        roomId: '1C',
        paths:	[0x3, 0x0, 0x0, 0x0],
        clipPaths: [0x3, 0x0, 0x0, 0x0],
        validEntrances:	0x3
    },
    {
        roomId: '1D',
        paths:	[0x3, 0x0, 0x0, 0x0],
        clipPaths: [0x3, 0x0, 0x0, 0x0],
        validEntrances:	0x3
    },
    {
        roomId: '1E',
        paths:	[0xf, 0xf, 0xf, 0x8],
        clipPaths: [0xf, 0xf, 0xf, 0x8],
        validEntrances:	0xF
    },
    {
        roomId: '1F',
        paths:	[0xf, 0xf, 0xf, 0x8],
        clipPaths: [0xf, 0xf, 0xf, 0x8],
        validEntrances:	0xF
    },
    {
        roomId: '20',
        paths:	[0xf, 0xf, 0xf, 0xf],
        clipPaths: [0xf, 0xf, 0xf, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '21',
        paths:	[0x7, 0x7, 0x8, 0x7],
        clipPaths: [0x7, 0x7, 0x7, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '22',
        paths:	[0x7, 0x7, 0x8, 0x7],
        clipPaths: [0x7, 0x7, 0x7, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '23',
        paths:	[0x7, 0x7, 0x8, 0x7],
        clipPaths: [0x7, 0x7, 0x7, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '24',
        paths:	[0x7, 0x7, 0x8, 0x7],
        clipPaths: [0x7, 0x7, 0x7, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '25',
        paths:	[0x7, 0x7, 0x8, 0x7],
        clipPaths: [0x7, 0x7, 0x7, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '26',
        paths:	[0xf, 0x6, 0x6, 0xf],
        clipPaths: [0xf, 0x6, 0x6, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '27',
        paths:	[0xf, 0x6, 0x6, 0xf],
        clipPaths: [0xf, 0x6, 0x6, 0xf],
        validEntrances:	0xF
    },
    {
        roomId: '28',
        paths:	[0xd, 0x0, 0xd, 0xd],
        clipPaths: [0xd, 0x0, 0xd, 0xd],
        validEntrances:	0xC
    },
    {
        //Boss Room
        roomId: '29',
        paths:	[0x0, 0x0, 0x0, 0x0],
        clipPaths: [0x0, 0x0, 0x0, 0x0],
        validEntrances:	0xC
    },
]

//Useful to get a possible room coming from direction
function getRoomsOpenToDirection(direction) {
    var validRooms = [];
    for(var i = 0; i < rooms.length; i++) {
        if((rooms[i].validEntrances & direction) == direction) {
            validRooms.push(rooms[i])
        }
    }

    return validRooms
}

module.exports = {
    getRoomsOpenToDirection,
    rooms
}